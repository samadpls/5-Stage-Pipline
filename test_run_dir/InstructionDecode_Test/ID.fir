;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit ID : 
  module ID : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip memWrite_in : UInt<1>, flip memRead_in : UInt<1>, flip memToReg_in : UInt<1>, flip operandA_in : SInt<32>, flip operandB_in : SInt<32>, flip rd_in : UInt<5>, flip strData_in : SInt<32>, flip aluCtrl_in : UInt<5>, flip regWrite_in : UInt<1>, flip rs1Ins_in : UInt<5>, flip rs2Ins_in : UInt<5>, flip operandAsel_in : UInt<2>, flip operandBsel_in : UInt<1>, flip hazard_in : UInt<1>, flip pc_in : UInt<32>, flip pc4_in : UInt<32>, memWrite_out : UInt<1>, memRead_out : UInt<1>, memToReg_out : UInt<1>, operandA_out : SInt<32>, operandB_out : SInt<32>, rd_out : UInt<5>, strData_out : SInt<32>, aluCtrl_out : UInt<5>, regWrite_out : UInt<1>, rs1Ins_out : UInt<5>, rs2Ins_out : UInt<5>, operandAsel_out : UInt<2>, operandBsel_out : UInt<1>, hazard_out : UInt<1>, pc_out : UInt<32>, pc4_out : UInt<32>}
    
    reg reg_memWrite : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID.scala 43:35]
    reg reg_memRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID.scala 44:34]
    reg reg_memToReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID.scala 45:35]
    reg reg_operandA : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[ID.scala 46:35]
    reg reg_operandB : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[ID.scala 47:35]
    reg reg_rd : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID.scala 48:29]
    reg reg_strData : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[ID.scala 49:34]
    reg reg_aluCtrl : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID.scala 50:34]
    reg reg_regWrite : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID.scala 51:35]
    reg reg_rs1Ins : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID.scala 52:33]
    reg reg_rs2Ins : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID.scala 53:33]
    reg reg_operandAsel : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ID.scala 54:38]
    reg reg_operandBsel : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID.scala 55:38]
    reg reg_hazard : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID.scala 56:33]
    reg reg_pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[ID.scala 57:29]
    reg reg_pc4 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[ID.scala 58:30]
    reg_memWrite <= io.memWrite_in @[ID.scala 61:22]
    reg_memRead <= io.memRead_in @[ID.scala 62:21]
    reg_memToReg <= io.memToReg_in @[ID.scala 63:22]
    reg_operandA <= io.operandA_in @[ID.scala 64:22]
    reg_operandB <= io.operandB_in @[ID.scala 65:22]
    reg_rd <= io.rd_in @[ID.scala 66:16]
    reg_strData <= io.strData_in @[ID.scala 67:21]
    reg_aluCtrl <= io.aluCtrl_in @[ID.scala 68:21]
    reg_regWrite <= io.regWrite_in @[ID.scala 69:22]
    reg_rs1Ins <= io.rs1Ins_in @[ID.scala 70:20]
    reg_rs2Ins <= io.rs2Ins_in @[ID.scala 71:20]
    reg_operandAsel <= io.operandAsel_in @[ID.scala 72:25]
    reg_operandBsel <= io.operandBsel_in @[ID.scala 73:25]
    reg_hazard <= io.hazard_in @[ID.scala 74:20]
    reg_pc <= io.pc_in @[ID.scala 75:16]
    reg_pc4 <= io.pc4_in @[ID.scala 76:17]
    io.memWrite_out <= reg_memWrite @[ID.scala 79:25]
    io.memRead_out <= reg_memRead @[ID.scala 80:24]
    io.memToReg_out <= reg_memToReg @[ID.scala 81:25]
    io.operandA_out <= reg_operandA @[ID.scala 82:25]
    io.operandB_out <= reg_operandB @[ID.scala 83:25]
    io.rd_out <= reg_rd @[ID.scala 84:19]
    io.strData_out <= reg_strData @[ID.scala 85:24]
    io.aluCtrl_out <= reg_aluCtrl @[ID.scala 86:24]
    io.regWrite_out <= reg_regWrite @[ID.scala 87:25]
    io.rs1Ins_out <= reg_rs1Ins @[ID.scala 88:23]
    io.rs2Ins_out <= reg_rs2Ins @[ID.scala 89:23]
    io.operandAsel_out <= reg_operandAsel @[ID.scala 90:28]
    io.operandBsel_out <= reg_operandBsel @[ID.scala 91:28]
    io.hazard_out <= reg_hazard @[ID.scala 92:23]
    io.pc_out <= reg_pc @[ID.scala 93:19]
    io.pc4_out <= reg_pc4 @[ID.scala 94:20]
    
